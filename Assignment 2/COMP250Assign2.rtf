{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf510
{\fonttbl\f0\froman\fcharset0 TimesNewRomanPSMT;\f1\fnil\fcharset0 AppleSymbols;\f2\fnil\fcharset0 STIXGeneral-Regular;
\f3\fnil\fcharset0 LucidaGrande;\f4\fnil\fcharset0 Tahoma;\f5\fswiss\fcharset0 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red217\green11\blue0;}
\margl1440\margr1440\vieww28600\viewh14880\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs28 \cf0 COMP 250 ASSIGN 2\
\
\

\b 1. Proofs by induction
\b0 \
\
     n\
a) \uc0\u8721  b^i = (b^(n+1)-1)/(b-1)\
\pard\pardeftab720
\cf0     i=0\
\
for b>1 and n>1\
\
Base Case: b=2, n=2\
\
(2^(2+1)-1)/(2-1) = (2^3-1)/1 = 2^3-1 = 8-1 = 7\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 n\
\uc0\u8721  2^i = 2^0 + 2^1 + 2^2 = 1 + 2 + 4 = 7\
\pard\pardeftab720
\cf0 i=0\
\
Induction step: n+1\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 n+1        \
\uc0\u8721   b^i          \
i=0\
    n\
=  \uc0\u8721  b^i + b^(n+1)\
    i=0\
= (b^(n+1)-1)/(b-1) + b^(n+1)           by induction hypothesis\
= (b^(n+1) - 1 + (b-1)b^(n+1))/(b-1)\
= (b^(n+1) - 1 + bb^(n+1) - b^(n+1))/(b-1)\
= (b^(n+2) - 1)/(b-1)\
\
Thus, this proves that \
n\
\uc0\u8721  b^i = (b^(n+1)-1)/(b-1).\
\pard\pardeftab720
\cf0 i=0\
\
\
     n\
b) \uc0\u8721 1/(k(k+1)) = n/(n+1)\
    k=1\
\
Base case: n=1, k=1\
\
1\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \uc0\u8721 1/(k(k+1)) = 1/(1(1+1)) = 1/2\
k=1\
\
n/(n+1) = 1/(1+1) = 1/2\
\
Induction step: n+1\
\
n+1                     n\
\uc0\u8721   1/(k(k+1)) = (\u8721  1/(k(k+1)) ) + 1/(n+1)(n+2)\
k=1                    k=1\
\
= n/(n+1) + 1/((n+1)(n+2))          by induction hypothesis\
= (n(n+2)+1)/((n+1)(n+2))\
= (n^2+2n+1)/((n+1)(n+2))\
= ((n+1)(n+1))/((n+1)(n+2))\
= (n+1)/(n+2)\
\
Thus, this proves that \
\pard\pardeftab720
\cf0 n\
\uc0\u8721 1/(k(k+1)) = n/(n+1)\
k=1\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
\
c) n^2 \uc0\u8804  2^n    
\f1 \uc0\u10845 
\f0  n \uc0\u8805  4 \
\
Base case: n=4\
\
4^2 \uc0\u8804  2^4\
16 \uc0\u8804  16\
\
Induction step:   n+1\
\
(n+1)^2 \uc0\u8804  2^(n+1)\
(n+1)^2 \uc0\u8804  2^n * 2\
n^2 + 2n + 1 \uc0\u8804  2 * 2^n   since n^2 \u8804  2^n by induction hypothesis\
n^2 + 2n + 1 
\f2 \uc0\u8804  2n^2\
n^2 + 2n + 1 - n^2 \uc0\u8804  2n^2 - n^2\
2n+1 \uc0\u8804  n^2 
\f0 \
for n \uc0\u8805  4,\
2(4) + 1 \uc0\u8804  4^2\
9 \uc0\u8804  16 \
\
Thus, (n+1)^2 \uc0\u8804  2^(n+1) for 
\f1 \uc0\u10845 
\f0  n \uc0\u8805  4 \
\
\
d) 8^n - 2^n is divisible by 6\
\
Base case: n=1\
\
8^1 -2^1 = 8-2 = 6\
\
6 is divisible by 6.\
\
6/6 = 1\
\
(8^n-2^n)/6 = x  , for some integer x\
(8^n-2^n) = 6x \
8^n = 6x + 2^n\
\
Induction step: n+1\
\
8^(n+1) - 2^(n+1)\
\
= 8^n * 8 - 2^n * 2\
= 8(6x + 2^n) - 2^n * 2               by induction hypothesis\
= 8 * 6x + 8 * 2^n -2^n * 2\
= 48x + 2^n(8-2)\
= 48x + 2^n(6)\
= 6(8x+2^n)         this is divisible by 6\
\
Thus, this proves that 8^n - 2^n is divisible by 6.\
\
\

\b 2. Big-Oh
\b0 \
\
a)  Prove that O(10000n + 10^6) = O(n)\
\
O(10000n + 10^6) = O(n) when:\
\
10000n + 10^6 \uc0\u8804  c * n\
Thus,\
c = 10001\
n
\f3 \uc0\u8320 
\f0  = 10^6\
such that\
10000n + 10^6 \uc0\u8804  10001n for 
\f1 \uc0\u10845 
\f0  n \uc0\u8805  10^6\
\
n \uc0\u8804  c * (10000n + 10^6)\
Thus, when c > 0, for 
\f1 \uc0\u10845 
\f0  n \uc0\u8805  n
\f3 \uc0\u8320 
\f0 ,  n \uc0\u8804  c * (10000n + 10^6).\
\
As well, because 10000 is a constant, by constant factor rule theorem, O(10000n + 10^6) = O(n).\
\
\
b) Prove that 3^n is not O(n^3)\
\
3^n is not O(n^3) means that\
3^n > c * n^3\
3^n/n^3 > c\
(log 3^n)/(log n^3) > c\
(n log 3)/(3 log n) > c\
Since n is approaching infinity and c is a constant, at some value 
\f2 n\uc0\u8805 n
\f3 \uc0\u8320 , 
\f0 (n log 3)/(3 log n) will be greater than c.\
\
Thus, 3^n is not O(n^3).\
\
\
c) Is O(n log 
\f3 \uc0\u8322 
\f0  n) in O(n^2)?\
\
Assume that O(n log 
\f3 \uc0\u8322 
\f0  n) is in O(n^2), and so n log 
\f3 \uc0\u8322 
\f0  n \uc0\u8804  c * n^2 
\f1 \uc0\u10845 
\f0  
\f2 \uc0\u55349 \u56775 
\f0 \uc0\u8805 n
\f3 \uc0\u8320 
\f0 .\
\
n log 
\f3 \uc0\u8322 
\f0  n \uc0\u8804  c * n^2\
\
Base case:\
n=1\
1 * log 
\f3 \uc0\u8322 
\f0  1 \uc0\u8804  c 1^2\
log 
\f3 \uc0\u8322 
\f0  1 \uc0\u8804  c\
0 \uc0\u8804  c\
This is true for any c>0.\
\
Induction step:\
n+1\
n+1\uc0\u8804  2n\
log 
\f3 \uc0\u8322 
\f0  n+1 \uc0\u8804  log 
\f3 \uc0\u8322 
\f0  2n\
              \uc0\u8804  log 
\f3 \uc0\u8322 
\f0  2 + log 
\f3 \uc0\u8322 
\f0  n\
              \uc0\u8804  1+n\
Therefore,  log 
\f3 \uc0\u8322 
\f0  (n+1) \uc0\u8804  n + 1\
There is an arbitrary function f(n) which satisfies this condition,\
f(n) < n+1 log 
\f3 \uc0\u8322 
\f0  (n+1) \uc0\u8804  (n+1)^2\

\f3 \

\f0 \
\
d) Example of two functions f and g such that f is not O(g) and g is not O(f)\cf2 \
\cf0 f(n) = sin n\
g(n) = cos n\
Both functions are alternating as n goes to infinity, so one cannot be the other for 
\f1 \uc0\u10845 
\f0  n > n
\f3 \uc0\u8320 
\f0 .\
\
\

\b 3. Give tightest O()
\b0 \
\
a) running time = constant * 10 * n/2\
O(10*n) => O(n)\
because inner loop is not dependent on n and it executes a constant number of times.\
\
b) running time = constant * n * n/2\
O(n^2)\
\
c) running time = constant * n/5 * (n-2)\
O(n^2)\
\
\
\

\b 4. Recursion
\b0 \
See the attached file\
\
\

\b 5. Recursion
\b0 \
\
a) Algorithm that works in O(log
\f3 \uc0\u8322 
\f0 (n))\
\
Algorithm: exponentialFunction(b,n)\
Input: integers b (base number) and n (exponent number)\
Output: 
\f4\fs26 the value of b^n for any b and integer n
\f0\fs28 \
//when n is zero\
if (n==0)\
\{\
return 1;\
\
//when n is positive\
while (n>0)\
if (n==1)\
\{ \
return b;\
\}\
//n is even\
else if (n%2==0)	\
\{\
return exponentialFunction(b, n/2) * exponentialFunction(b, n/2);\
\}\
//n is odd\
else return b * exponentialFunction(b, n-1);\
\
//when n is negative\
while (n<0)\
if (n==-1)\
\{\
return 1/b\
\}\
//n is even\
else if (n%2==0)\
\{\
return exponentialFunction(1/b, n/2) * exponentialFunction(1/b, n/2);\
\}\
//n is odd\
else return exponentialFunction(1/b, n+1) * exponentialFunction(1/b, n+1);\
\
\
b) Prove by induction that my algorithm works correctly\
(For this question I am only considering cases when n>0)\
\
Base case \
n=1\
b^n = b^1 = b\
so this works correctly\
\
for every n and b positive integers, the method returns b^n >= b  and b^n is divisible by b.\
\
Induction step \
\
n+1\
\
//when n is an even number\
exponentialFunction(b, n/2) * exponentialFunction(b, n/2)\
Due to the fact that my algorithm works correctly,\
I have 
\f1 \uc0\u10845 
\f0  n%2==0, b^(n/2) * b^(n/2)\
\
//when n is an odd number\
b * exponentialFunction(b, n-1)\
Due to the fact that my algorithm works correctly,\
I have 
\f1 \uc0\u10845 
\f0  n%==1, b * b^(n-1)\
\
Putting these two statements together, we get a desired conclusion.\
\
Therefore, I can conclude that my algorithm works correctly.\
\
\
\
\
                                                                                                                                                                                                                                                                                                \
\
\
 \
\
\

\f5 \
\
\
\
\
}